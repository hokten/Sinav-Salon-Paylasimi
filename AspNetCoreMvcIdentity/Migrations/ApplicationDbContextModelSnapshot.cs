// <auto-generated />
using System;
using AspNetCoreMvcIdentity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreMvcIdentity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.ApplicationRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.ApplicationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int>("BolumId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Bolum", b =>
                {
                    b.Property<int>("BolumId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BolumAdi");

                    b.HasKey("BolumId");

                    b.ToTable("Bolum");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.BolumOgretmen", b =>
                {
                    b.Property<int>("BolumId");

                    b.Property<int>("OgretimElemaniId");

                    b.HasKey("BolumId", "OgretimElemaniId");

                    b.HasIndex("OgretimElemaniId");

                    b.ToTable("BolumOgretmen");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DersAdi");

                    b.Property<string>("DersKodu");

                    b.Property<int?>("ParentDersId");

                    b.Property<int>("ProgramId");

                    b.HasKey("DersId");

                    b.HasIndex("ParentDersId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.OgretimElemani", b =>
                {
                    b.Property<int>("OgretimElemaniId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OgretimElemaniAdiSoyadi");

                    b.Property<string>("OgretimElemaniKisaltmaa");

                    b.HasKey("OgretimElemaniId");

                    b.ToTable("OgretimElemani");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Oturum", b =>
                {
                    b.Property<int>("OturumId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OturumTarihveSaati");

                    b.Property<int?>("SalonId");

                    b.HasKey("OturumId");

                    b.HasIndex("SalonId");

                    b.ToTable("Oturum");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BolumId");

                    b.Property<string>("ProgramAdi");

                    b.HasKey("ProgramId");

                    b.HasIndex("BolumId");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Salon", b =>
                {
                    b.Property<int>("SalonId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SalonAdi");

                    b.HasKey("SalonId");

                    b.ToTable("Salon");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Sinav", b =>
                {
                    b.Property<int>("SinavId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DersId");

                    b.Property<int>("DersSorumlusuId");

                    b.Property<int>("GozetmenId");

                    b.Property<int>("OturumId");

                    b.Property<int>("SalonId");

                    b.HasKey("SinavId");

                    b.HasIndex("DersId");

                    b.HasIndex("DersSorumlusuId");

                    b.HasIndex("GozetmenId");

                    b.HasIndex("OturumId");

                    b.HasIndex("SalonId");

                    b.ToTable("Sinav");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<long>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<long>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.ApplicationUser", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Bolum", "Bolum")
                        .WithMany()
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.BolumOgretmen", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Bolum", "Bolum")
                        .WithMany("BolumOgretimElemanlari")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.OgretimElemani", "OgretimElemani")
                        .WithMany("OgretimElemanininBolumleri")
                        .HasForeignKey("OgretimElemaniId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Ders", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Ders", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentDersId");

                    b.HasOne("AspNetCoreMvcIdentity.Models.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Oturum", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Salon")
                        .WithMany("Oturum")
                        .HasForeignKey("SalonId");
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Program", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Bolum", "Bolum")
                        .WithMany("Programlar")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreMvcIdentity.Models.Sinav", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.Ders", "Ders")
                        .WithMany()
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.OgretimElemani", "DersSorumlusu")
                        .WithMany()
                        .HasForeignKey("DersSorumlusuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.OgretimElemani", "Gozetmen")
                        .WithMany()
                        .HasForeignKey("GozetmenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.Oturum", "Oturum")
                        .WithMany("Sinav")
                        .HasForeignKey("OturumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("AspNetCoreMvcIdentity.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
